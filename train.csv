question,sql
Display errors from the last 3 months,SELECT * FROM log_data WHERE log_level = 'ERROR' AND timestamp >= NOW() - INTERVAL '3 months' ORDER BY timestamp DESC;
Display errors from the last 1 month,SELECT * FROM log_data WHERE log_level = 'ERROR' AND timestamp >= NOW() - INTERVAL '1 month' ORDER BY timestamp DESC;
Display log_data from the last 1 hour,SELECT * FROM log_data WHERE timestamp >= NOW() - INTERVAL '1 hour' ORDER BY timestamp DESC;
Display critical log_data from the current day,SELECT * FROM log_data WHERE log_level = 'CRITICAL' AND timestamp::DATE = CURRENT_DATE ORDER BY timestamp DESC;
Count log_data per log level for the last 7 days,"SELECT log_level, COUNT(*) AS log_count FROM log_data WHERE timestamp >= NOW() - INTERVAL '7 days' GROUP BY log_level ORDER BY log_count DESC;"
List distinct error messages and their count in the last 30 days,"SELECT error_message, COUNT(*) AS occurrences FROM log_data WHERE log_level = 'ERROR' AND timestamp >= NOW() - INTERVAL '30 days' GROUP BY error_message ORDER BY occurrences DESC;"
"Display all log_data generated on a specific date (e.g., '2022-01-01')",SELECT * FROM log_data WHERE timestamp::DATE = '2022-01-01' ORDER BY timestamp DESC;
Find the first occurrence of each log level,"SELECT log_level, MIN(timestamp) AS first_occurrence FROM log_data GROUP BY log_level ORDER BY first_occurrence ASC;"
"Display log_data containing a specific keyword (e.g., ""connection"")",SELECT * FROM log_data WHERE error_message ILIKE '%connection%' ORDER BY timestamp DESC;
Count log_data by day for the last week,"SELECT timestamp::DATE AS log_date, COUNT(*) AS log_count FROM log_data WHERE timestamp >= NOW() - INTERVAL '7 days' GROUP BY log_date ORDER BY log_date DESC;"
Display log_data generated during a specific time range,SELECT * FROM log_data WHERE timestamp BETWEEN '2022-01-01 08:00:00' AND '2022-01-01 18:00:00' ORDER BY timestamp ASC;
Find the top 5 most frequent error messages,"SELECT error_message, COUNT(*) AS frequency FROM log_data WHERE log_level = 'ERROR' GROUP BY error_message ORDER BY frequency DESC LIMIT 5;"
Display all log_data grouped by log level,"SELECT log_level, ARRAY_AGG(error_message) AS messages FROM log_data GROUP BY log_level ORDER BY log_level ASC;"
Count the number of log_data in each month of the current year,"SELECT DATE_TRUNC('month', timestamp) AS month, COUNT(*) AS log_count FROM log_data WHERE timestamp >= DATE_TRUNC('year', NOW()) GROUP BY month ORDER BY month ASC;"
Find the last log entry for each log level,"SELECT DISTINCT ON (log_level) log_level, timestamp, error_message FROM log_data ORDER BY log_level, timestamp DESC;"
Display log_data generated on weekends,"SELECT * FROM log_data WHERE EXTRACT(DOW FROM timestamp) IN (0, 6) -- 0 = Sunday, 6 = Saturday ORDER BY timestamp DESC;"
Find the average time interval between critical log_data,SELECT AVG(timestamp - LAG(timestamp) OVER (ORDER BY timestamp)) AS avg_interval FROM log_data WHERE log_level = 'CRITICAL';
Find the maximum gap between consecutive log_data,SELECT MAX(timestamp - LAG(timestamp) OVER (ORDER BY timestamp)) AS max_gap FROM log_data;
